name: Live Elements Js Compiler Build Matrix

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-18.04]
        include:
        - os: macos-latest
          NAME: macos
          TARGET: x86_64-apple-darwin
          COMPILER: clang
          LINKER: clang
        - os: ubuntu-18.04
          NAME: ubuntu
          TARGET: x86_64-linux
          COMPILER: g++
          LINKER: g++
        - os: windows-latest
          NAME: windows
          platform: win32
          arch: x64

    steps:
      - uses: actions/checkout@v1
      
      - name: Get Archive Name
        id: get_archive_name
        run: echo "::set-output name=ARCHIVE_FILENAME::live-elements-js-compiler-${{ github.event.release.tag_name }}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz"

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
        env:
          ARCHIVE_NAME: ${{ steps.get_archive_name.outputs.ARCHIVE_FILENAME }}
        
      - name: Install ubuntu deps
        if: contains(matrix.os, 'ubuntu-18.04')
        run: sudo apt install mesa-common-dev libglu1-mesa-dev

      - name: Install deps
        run: npm install

      - name: Build
        run: |
          npm run cmake

      - name: Compress files on windows
        if: (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master') && contains(matrix.os, 'windows-latest')
        uses: a7ul/tar-action@v1.0.2
        id: compress-windows
        env:
          ARCHIVE_NAME: ${{ steps.get_archive_name.outputs.ARCHIVE_FILENAME }}
        with:
          command: c
          cwd: ./build/Release
          files: |
            ./live_elements_js_compiler.node
            ./live_elements_js_compiler.lib
            ./live_elements_js_compiler.exp
          outPath: ${{ steps.get_archive_name.outputs.ARCHIVE_FILENAME }}

      - uses: actions/upload-artifact@v1
        if: (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master') && contains(matrix.os, 'windows-latest')
        with:
          name: ${{ steps.get_archive_name.outputs.ARCHIVE_FILENAME }}
          path: ${{ steps.get_archive_name.outputs.ARCHIVE_FILENAME }}

      - name: Upload release binaries
        if: startsWith(github.ref, 'refs/tags/v') && contains(matrix.os, 'windows-latest')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.get_archive_name.outputs.ARCHIVE_FILENAME }}

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v') && contains(matrix.os, 'ubuntu-18.04')
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          CMAKE_BUILD_PARALLEL_LEVEL: 8
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> .npmrc
          npm publish --access=public
